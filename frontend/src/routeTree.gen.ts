/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PanelRouteImport } from './routes/panel'
import { Route as IndexRouteImport } from './routes/index'
import { Route as KioskIndexRouteImport } from './routes/kiosk/index'
import { Route as CashierIndexRouteImport } from './routes/cashier/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'

const PanelRoute = PanelRouteImport.update({
  id: '/panel',
  path: '/panel',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const KioskIndexRoute = KioskIndexRouteImport.update({
  id: '/kiosk/',
  path: '/kiosk/',
  getParentRoute: () => rootRouteImport,
} as any)
const CashierIndexRoute = CashierIndexRouteImport.update({
  id: '/cashier/',
  path: '/cashier/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/panel': typeof PanelRoute
  '/admin': typeof AdminIndexRoute
  '/cashier': typeof CashierIndexRoute
  '/kiosk': typeof KioskIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/panel': typeof PanelRoute
  '/admin': typeof AdminIndexRoute
  '/cashier': typeof CashierIndexRoute
  '/kiosk': typeof KioskIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/panel': typeof PanelRoute
  '/admin/': typeof AdminIndexRoute
  '/cashier/': typeof CashierIndexRoute
  '/kiosk/': typeof KioskIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/panel' | '/admin' | '/cashier' | '/kiosk'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/panel' | '/admin' | '/cashier' | '/kiosk'
  id: '__root__' | '/' | '/panel' | '/admin/' | '/cashier/' | '/kiosk/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PanelRoute: typeof PanelRoute
  AdminIndexRoute: typeof AdminIndexRoute
  CashierIndexRoute: typeof CashierIndexRoute
  KioskIndexRoute: typeof KioskIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/panel': {
      id: '/panel'
      path: '/panel'
      fullPath: '/panel'
      preLoaderRoute: typeof PanelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kiosk/': {
      id: '/kiosk/'
      path: '/kiosk'
      fullPath: '/kiosk'
      preLoaderRoute: typeof KioskIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cashier/': {
      id: '/cashier/'
      path: '/cashier'
      fullPath: '/cashier'
      preLoaderRoute: typeof CashierIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PanelRoute: PanelRoute,
  AdminIndexRoute: AdminIndexRoute,
  CashierIndexRoute: CashierIndexRoute,
  KioskIndexRoute: KioskIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
